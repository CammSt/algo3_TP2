@startuml
title "Round Class"

class Game {
}

abstract Round{
# players : ArrayList
# map : Map
# countryCards : ArrayList
}

class SetUpRound{
+ startRound()
+ dealCountryCards()
}

class AttackRound{
- battlefield : Battlefield
- winnerDefiner : winnerDefiner
+ startRound() : Player
+ attack(Country: attackingCountry, int: amountDice, Country: defendingCountry)
- invade(Player: attacker, Country: countryDefender, Country: countryAttacker)
}

class PlacementRound {
+ firstRounds(Integer: maxPlacement)
}

class RegroupRound{
+ startRound()
+ regroup(Integer: firstPlayerNumber, Country: country1, Country: country2, Integer: armyToRegroup)
}

class Battlefield{
+ battle(Country attacker, int amountDice, Country defender): Integer[]
}

class Dice{
+rollDice(int:diceAmount): DiceRoll
}

class DiceRoll{
- results : ArrayList<Integer>
+ compareResultsWith(DiceRoll diceResult, Integer stop) : Integer[]
+ addResult(Integer oneResult)
}

Game --> Round
Round <|-- AttackRound
AttackRound "1" -->"1" Battlefield
Battlefield "1"--> "1" Dice
Dice ...> DiceRoll
Round <|--left PlacementRound
Round <|-- RegroupRound
Round <|--right SetUpRound
@enduml

@enduml