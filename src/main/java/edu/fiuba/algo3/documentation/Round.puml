@startuml
title "Round Class"

class Game {
}

class AttackRound{
- battlefield : Battlefield
- players : ArrayList<Player>
- map : Map
- countryCards : ArrayList<CountryCard>
+ startRound() : Player
+ attack(Country: attackingCountry, int: amountDice, Country: defendingCountry)
- invade(Player: attacker, Country: countryDefender, Country: countryAttacker)
}

class WinnerDefiner{
+ theresAWinner() : boolean
+ winner() : Player
}

class PlacementRound {
- players : ArrayList<Player>
- map : Map
# maxArmiesFirstRound : Integer;
# maxArmiesSecondRound : Integer;
+ placingFiveArmiesInPlacementRound(Player player, HashMap armiesToAdd)
+ placingThreeArmiesInPlacementRound(Player player, HashMap<Country,Integer> armiesToAdd)
}

class RegroupRound{
- players : ArrayList<Player>
- map : Map
- armyMover : ArmyMover
+ startRound()
+ regroup(Player player, Country firstCountry, Country secondCountry, Integer armyToRegroup)
+ addArmiesInRound(Player player, HashMap<Country, Integer> armiesToAdd)
}

class Battlefield{
+ battle(Country attacker, int amountDice, Country defender): Integer[]
}

class Dice{
+rollDice(int:diceAmount): DiceRoll
}

class DiceRoll{
- results : ArrayList<Integer>
+ compareResultsWith(DiceRoll diceResult, Integer stop) : Integer[]
+ addResult(Integer oneResult)
}

Game --> AttackRound
AttackRound --> WinnerDefiner
AttackRound "1" -->"1" Battlefield
Battlefield "1"--> "1" Dice
Dice ...> DiceRoll
Game -left-> PlacementRound
Game -right-> RegroupRound

@enduml

@enduml